{"ast":null,"code":"var _jsxFileName = \"/Users/Niyati/ProjectNITW2/Frontend/src/Events.js\",\n  _s = $RefreshSig$();\n// import axios from 'axios';\n// import React, { useEffect, useState } from 'react';\n\n// const EventsPage = () => {\n//   const [user, setUser] = useState(null);\n\n//   useEffect(() => {\n//     // Fetch user data from backend\n//     axios.get('http://localhost:5001/auth/user', { withCredentials: true }) // Ensure credentials are sent\n//       .then(response => {\n//         setUser(response.data); // Set user data in state\n//       })\n//       .catch(error => {\n//         console.error('Error fetching user data:', error);\n//       });\n//   }, []);\n\n//   return (\n//     <div>\n//       {user ? (\n//         <h1>Welcome, {user.name}!</h1>\n//       ) : (\n//         <h1>Loading user data...</h1>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default EventsPage;\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventsPage = () => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [error, setError] = useState(null); // State to hold error messages\n  const [loading, setLoading] = useState(true); // State to manage loading status\n\n  useEffect(() => {\n    // Fetch user data from backend\n    axios.get('http://localhost:5001/auth/user', {\n      withCredentials: true\n    }).then(response => {\n      setUser(response.data); // Set user data in state\n      setLoading(false); // Set loading to false\n    }).catch(error => {\n      console.error('Error fetching user data:', error);\n      setError('Failed to fetch user data. Please try again.'); // Set error message\n      setLoading(false); // Set loading to false\n    });\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading user data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 12\n    }, this); // Show loading state\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 12\n    }, this); // Show error message\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: user ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Welcome, \", user.name, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User not authenticated. Please log in.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(EventsPage, \"JlOYIZtLn2weNhklDDDuYpAhkco=\");\n_c = EventsPage;\nexport default EventsPage;\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["axios","React","useEffect","useState","jsxDEV","_jsxDEV","EventsPage","_s","user","setUser","error","setError","loading","setLoading","get","withCredentials","then","response","data","catch","console","children","fileName","_jsxFileName","lineNumber","columnNumber","name","_c","$RefreshReg$"],"sources":["/Users/Niyati/ProjectNITW2/Frontend/src/Events.js"],"sourcesContent":["// import axios from 'axios';\n// import React, { useEffect, useState } from 'react';\n\n// const EventsPage = () => {\n//   const [user, setUser] = useState(null);\n\n//   useEffect(() => {\n//     // Fetch user data from backend\n//     axios.get('http://localhost:5001/auth/user', { withCredentials: true }) // Ensure credentials are sent\n//       .then(response => {\n//         setUser(response.data); // Set user data in state\n//       })\n//       .catch(error => {\n//         console.error('Error fetching user data:', error);\n//       });\n//   }, []);\n\n//   return (\n//     <div>\n//       {user ? (\n//         <h1>Welcome, {user.name}!</h1>\n//       ) : (\n//         <h1>Loading user data...</h1>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default EventsPage;\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\n\nconst EventsPage = () => {\n  const [user, setUser ] = useState(null);\n  const [error, setError] = useState(null); // State to hold error messages\n  const [loading, setLoading] = useState(true); // State to manage loading status\n\n  useEffect(() => {\n    // Fetch user data from backend\n    axios.get('http://localhost:5001/auth/user', { withCredentials: true })\n      .then(response => {\n        setUser (response.data); // Set user data in state\n        setLoading(false); // Set loading to false\n      })\n      .catch(error => {\n        console.error('Error fetching user data:', error);\n        setError('Failed to fetch user data. Please try again.'); // Set error message\n        setLoading(false); // Set loading to false\n      });\n  }, []);\n\n  if (loading) {\n    return <h1>Loading user data...</h1>; // Show loading state\n  }\n\n  if (error) {\n    return <h1>{error}</h1>; // Show error message\n  }\n\n  return (\n    <div>\n      {user ? (\n        <h1>Welcome, {user.name}!</h1>\n      ) : (\n        <h1>User not authenticated. Please log in.</h1>\n      )}\n    </div>\n  );\n};\n\nexport default EventsPage;"],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAE,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACvC,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE9CD,SAAS,CAAC,MAAM;IACd;IACAF,KAAK,CAACc,GAAG,CAAC,iCAAiC,EAAE;MAAEC,eAAe,EAAE;IAAK,CAAC,CAAC,CACpEC,IAAI,CAACC,QAAQ,IAAI;MAChBR,OAAO,CAAEQ,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC;MACzBL,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC,CACDM,KAAK,CAACT,KAAK,IAAI;MACdU,OAAO,CAACV,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjDC,QAAQ,CAAC,8CAA8C,CAAC,CAAC,CAAC;MAC1DE,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,IAAID,OAAO,EAAE;IACX,oBAAOP,OAAA;MAAAgB,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,CAAC,CAAC;EACxC;EAEA,IAAIf,KAAK,EAAE;IACT,oBAAOL,OAAA;MAAAgB,QAAA,EAAKX;IAAK;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC,CAAC;EAC3B;EAEA,oBACEpB,OAAA;IAAAgB,QAAA,EACGb,IAAI,gBACHH,OAAA;MAAAgB,QAAA,GAAI,WAAS,EAACb,IAAI,CAACkB,IAAI,EAAC,GAAC;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,gBAE9BpB,OAAA;MAAAgB,QAAA,EAAI;IAAsC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAC/C;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAClB,EAAA,CApCID,UAAU;AAAAqB,EAAA,GAAVrB,UAAU;AAsChB,eAAeA,UAAU;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}