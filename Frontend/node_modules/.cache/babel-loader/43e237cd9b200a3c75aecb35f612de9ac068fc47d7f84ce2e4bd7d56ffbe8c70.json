{"ast":null,"code":"var _jsxFileName = \"/Users/Niyati/ProjectNITW2/Frontend/src/Calender.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport axios from 'axios';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst localizer = momentLocalizer(moment);\nconst MyCalendar = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  useEffect(() => {\n    const fetchEvents = async () => {\n      try {\n        const response = await axios.get('http://localhost:5001/api/events', {\n          withCredentials: true\n        });\n        const formattedEvents = response.data.map(event => ({\n          title: event.summary,\n          start: event.start.dateTime ? new Date(event.start.dateTime) : new Date(event.start.date),\n          end: event.end.dateTime ? new Date(event.end.dateTime) : new Date(event.end.date)\n        }));\n        setEvents(formattedEvents);\n      } catch (error) {\n        console.error('Error fetching events:', error.response ? error.response.data : error.message);\n      }\n    };\n    fetchEvents();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your Events\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n      localizer: localizer,\n      events: events,\n      startAccessor: \"start\",\n      endAccessor: \"end\",\n      style: {\n        height: 500,\n        margin: '50px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(MyCalendar, \"j18ueuia/psAZ/XawE3UyqzOWsE=\");\n_c = MyCalendar;\nexport default MyCalendar;\n// import React, { useEffect, useState } from 'react';\n// import { Calendar, momentLocalizer } from 'react-big-calendar';\n// import moment from 'moment';\n// import axios from 'axios';\n// import 'react-big-calendar/lib/css/react-big-calendar.css';\n\n// const localizer = momentLocalizer(moment);\n\n// const MyCalendar = () => {\n//   const [events, setEvents] = useState([]);\n\n//   useEffect(() => {\n//     const fetchEvents = async () => {\n//       try {\n//         const response = await axios.get('http://localhost:5001/api/events', { withCredentials: true });\n\n//         const formattedEvents = response.data.map(event => ({\n//           title: event.summary,\n//           start: event.start.dateTime ? new Date(event.start.dateTime) : new Date(event.start.date),\n//           end: event.end.dateTime ? new Date(event.end.dateTime) : new Date(event.end.date),\n//         }));\n\n//         setEvents(formattedEvents);\n//       } catch (error) {\n//         console.error('Error fetching events:', error);\n//       }\n//     };\n\n//     fetchEvents();\n//   }, []);\n\n//   return (\n//     <div>\n//       <h1>Your Events</h1>\n//       <Calendar\n//         localizer={localizer}\n//         events={events}\n//         startAccessor=\"start\"\n//         endAccessor=\"end\"\n//         style={{ height: 500, margin: '50px' }}\n//       />\n//     </div>\n//   );\n// };\n\n// export default MyCalendar;\n\n// // Calendar.js\n// import React, { useEffect, useState } from 'react';\n// import { Calendar, momentLocalizer } from 'react-big-calendar';\n// import moment from 'moment';\n// import axios from 'axios';\n// import 'react-big-calendar/lib/css/react-big-calendar.css';\n\n// const localizer = momentLocalizer(moment);\n\n// const MyCalendar = () => {\n//   const [events, setEvents] = useState([]);\n\n//   useEffect(() => {\n//     const fetchEvents = async () => {\n//       try {\n\n//         const response = await axios.get('http://localhost:5001/', { withCredentials: true });\n\n//         const formattedEvents = response.data.map(event => ({\n//           title: event.summary,\n//           start: new Date(event.start.dateTime),\n//           end: new Date(event.end.dateTime),\n//         }));\n//         setEvents(formattedEvents);\n//       } catch (error) {\n//         console.error('Error fetching events:', error);\n//       }\n//     };\n\n//     fetchEvents();\n//   }, []);\n\n//   return (\n//     <div>\n//       <h1>Your Events</h1>\n//       <Calendar\n//         localizer={localizer}\n//         events={events}\n//         startAccessor=\"start\"\n//         endAccessor=\"end\"\n//         style={{ height: 500, margin: '50px' }}\n//       />\n//     </div>\n//   );\n// };\n\n// export default MyCalendar;\nvar _c;\n$RefreshReg$(_c, \"MyCalendar\");","map":{"version":3,"names":["React","useEffect","useState","Calendar","momentLocalizer","moment","axios","jsxDEV","_jsxDEV","localizer","MyCalendar","_s","events","setEvents","fetchEvents","response","get","withCredentials","formattedEvents","data","map","event","title","summary","start","dateTime","Date","date","end","error","console","message","children","fileName","_jsxFileName","lineNumber","columnNumber","startAccessor","endAccessor","style","height","margin","_c","$RefreshReg$"],"sources":["/Users/Niyati/ProjectNITW2/Frontend/src/Calender.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport axios from 'axios';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\n\nconst localizer = momentLocalizer(moment);\n\nconst MyCalendar = () => {\n  const [events, setEvents] = useState([]);\n\n  useEffect(() => {\n    const fetchEvents = async () => {\n      try {\n        const response = await axios.get('http://localhost:5001/api/events', { withCredentials: true });\n\n        const formattedEvents = response.data.map(event => ({\n          title: event.summary,\n          start: event.start.dateTime ? new Date(event.start.dateTime) : new Date(event.start.date),\n          end: event.end.dateTime ? new Date(event.end.dateTime) : new Date(event.end.date),\n        }));\n\n        setEvents(formattedEvents);\n      } catch (error) {\n        console.error('Error fetching events:', error.response ? error.response.data : error.message);\n      }\n    };\n\n    fetchEvents();\n  }, []);\n\n  return (\n    <div>\n      <h1>Your Events</h1>\n      <Calendar\n        localizer={localizer}\n        events={events}\n        startAccessor=\"start\"\n        endAccessor=\"end\"\n        style={{ height: 500, margin: '50px' }}\n      />\n    </div>\n  );\n};\n\nexport default MyCalendar;\n// import React, { useEffect, useState } from 'react';\n// import { Calendar, momentLocalizer } from 'react-big-calendar';\n// import moment from 'moment';\n// import axios from 'axios';\n// import 'react-big-calendar/lib/css/react-big-calendar.css';\n\n// const localizer = momentLocalizer(moment);\n\n// const MyCalendar = () => {\n//   const [events, setEvents] = useState([]);\n\n//   useEffect(() => {\n//     const fetchEvents = async () => {\n//       try {\n//         const response = await axios.get('http://localhost:5001/api/events', { withCredentials: true });\n\n//         const formattedEvents = response.data.map(event => ({\n//           title: event.summary,\n//           start: event.start.dateTime ? new Date(event.start.dateTime) : new Date(event.start.date),\n//           end: event.end.dateTime ? new Date(event.end.dateTime) : new Date(event.end.date),\n//         }));\n\n//         setEvents(formattedEvents);\n//       } catch (error) {\n//         console.error('Error fetching events:', error);\n//       }\n//     };\n\n//     fetchEvents();\n//   }, []);\n\n//   return (\n//     <div>\n//       <h1>Your Events</h1>\n//       <Calendar\n//         localizer={localizer}\n//         events={events}\n//         startAccessor=\"start\"\n//         endAccessor=\"end\"\n//         style={{ height: 500, margin: '50px' }}\n//       />\n//     </div>\n//   );\n// };\n\n// export default MyCalendar;\n\n// // Calendar.js\n// import React, { useEffect, useState } from 'react';\n// import { Calendar, momentLocalizer } from 'react-big-calendar';\n// import moment from 'moment';\n// import axios from 'axios';\n// import 'react-big-calendar/lib/css/react-big-calendar.css';\n\n// const localizer = momentLocalizer(moment);\n\n// const MyCalendar = () => {\n//   const [events, setEvents] = useState([]);\n\n//   useEffect(() => {\n//     const fetchEvents = async () => {\n//       try {\n    \n//         const response = await axios.get('http://localhost:5001/', { withCredentials: true });\n      \n//         const formattedEvents = response.data.map(event => ({\n//           title: event.summary,\n//           start: new Date(event.start.dateTime),\n//           end: new Date(event.end.dateTime),\n//         }));\n//         setEvents(formattedEvents);\n//       } catch (error) {\n//         console.error('Error fetching events:', error);\n//       }\n//     };\n\n//     fetchEvents();\n//   }, []);\n\n//   return (\n//     <div>\n//       <h1>Your Events</h1>\n//       <Calendar\n//         localizer={localizer}\n//         events={events}\n//         startAccessor=\"start\"\n//         endAccessor=\"end\"\n//         style={{ height: 500, margin: '50px' }}\n//       />\n//     </div>\n//   );\n// };\n\n// export default MyCalendar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}